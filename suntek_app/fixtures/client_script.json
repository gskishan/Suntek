[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2024-02-19 17:35:56.546765",
  "module": "suntek",
  "name": "Enquiry",
  "script": "frappe.ui.form.on('Lead', {\r\n\trefresh(frm) {\r\n\t\t$('div.frappe-control.input-max-width[data-fieldtype=\"Link\"][data-fieldname=\"custom_code\"]').css(\r\n\t\t\t{ 'width': '61px', 'position': 'absolute', 'left': '-50px' })\r\n\t\tif (frm.doc.custom_poc == 1) {\r\n\t\t\t$('div.frappe-control.input-max-width[data-fieldtype=\"Link\"][data-fieldname=\"custom_poc_code\"]').css(\r\n\t\t\t\t{ 'width': '61px', 'position': 'absolute', 'left': '-50px' })\r\n\t\t}\r\n\t},\r\n\tcustom_poc(frm){\r\n\t    \tif (frm.doc.custom_poc == 1) {\r\n\t\t\t$('div.frappe-control.input-max-width[data-fieldtype=\"Link\"][data-fieldname=\"custom_poc_code\"]').css(\r\n\t\t\t\t{ 'width': '61px', 'position': 'absolute', 'left': '-50px' })\r\n\t\t}\r\n\t    \r\n\t},\r\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2024-11-20 11:22:18.871750",
  "module": "suntek",
  "name": "Quotation",
  "script": "frappe.ui.form.on('Quotation', {\n    refresh(frm) {\n        // Additional refresh logic (if needed)\n    },\n    onload(frm) {\n        if (frm.doc.opportunity && cur_frm.is_new()) {\n            frappe.db.get_value('Opportunity', cur_frm.doc.opportunity, [\n                'custom_designing_number', 'contact_person', 'custom_sales_excecutive', \n                'custom_company_name', 'custom_another_mobile_no', 'custom_person_name', \n                \"custom_customer_category\"\n            ]).then(r => {\n                if (r.message[\"custom_customer_category\"] == \"Individual\") {\n                    cur_frm.doc.customer_name = r.message[\"contact_person\"];\n                }\n                if (r.message[\"custom_customer_category\"] == 'C & I') {\n                    cur_frm.doc.customer_name = r.message[\"custom_company_name\"];\n                }\n\n                cur_frm.set_value(\"sales_person\", r.message[\"custom_sales_excecutive\"]);\n                cur_frm.set_value(\"custom_company_name\", r.message[\"custom_company_name\"]);\n\n                if (r.message[\"custom_designing_number\"] !== null) {\n                    frappe.db.get_doc('Designing', r.message[\"custom_designing_number\"])\n                        .then(doc => {\n                            let data = doc.bom;\n                            cur_frm.doc.items = [];\n                            for (var i = 0; i < data.length; i++) {\n                                var childTable = cur_frm.add_child(\"items\");\n                                childTable.item_code = data[i]['item_code'];\n                                childTable.item_name = data[i]['item_name'];\n                                childTable.item_group = data[i]['item_group'];\n                                childTable.description = data[i]['description'];\n                                frappe.model.set_value(childTable.doctype, childTable.name, \"qty\", data[i]['qty']);\n                                frappe.model.set_value(childTable.doctype, childTable.name, \"uom\", data[i]['uom']);\n\n                                childTable.rate = data[i]['rate'];\n                                childTable.prevdoc_doctype = 'Opportunity';\n                                childTable.prevdoc_docname = cur_frm.doc.opportunity;\n                            }\n                            cur_frm.refresh_field(\"items\");\n                        });\n                }\n            });\n        }\n        \n        // Make certain fields read-only for all users except System Manager\n        var hasSystemManager = frappe.user.has_role('System Manager');\n        if (!hasSystemManager) {\n            cur_frm.set_df_property(\"terms\", \"read_only\", 1);\n        }\n    },\n    payment_terms_template(frm) {\n        if (frm.doc.payment_terms_template) {\n            frappe.call({\n                method: \"frappe.client.get\",\n                args: {\n                    doctype: \"Payment Terms Template\",\n                    name: frm.doc.payment_terms_template\n                },\n                callback: function(r) {\n                    if (r.message) {\n                        frm.clear_table(\"payment_schedule\");\n                        $.each(r.message.terms, function(index, row) {\n                            let child = frm.add_child(\"payment_schedule\");\n                            frappe.model.set_value(child.doctype, child.name, \"payment_term\", row.payment_term);\n                            frappe.model.set_value(child.doctype, child.name, \"due_date\", row.due_date);\n                            frappe.model.set_value(child.doctype, child.name, \"invoice_portion\", row.invoice_portion);\n                        });\n                        frm.refresh_field(\"payment_schedule\");\n                    }\n                }\n            });\n        } else {\n            frm.clear_table(\"payment_schedule\");\n            frm.refresh_field(\"payment_schedule\");\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Designing",
  "enabled": 1,
  "modified": "2024-02-19 17:36:08.400897",
  "module": "suntek",
  "name": "Designing",
  "script": "frappe.ui.form.on('Designing', {\n    refresh: function (frm) {\n        frm.fields_dict['designing_status'].get_query = function () {\n            return {\n                filters: [\n                    ['Designing', 'designing_status', '===', 'Completed']\n                ]\n            };\n        };\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 0,
  "modified": "2024-03-06 07:46:30.523531",
  "module": "suntek",
  "name": "Opportunity_activity",
  "script": "frappe.ui.form.on('Opportunity', {\n\trefresh(frm) {\n\t    $(\"#opportunity-activities_tab-tab\").css(\"display\", \"none\");\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2024-04-08 10:45:47.378617",
  "module": "suntek",
  "name": "Delivery_note",
  "script": "frappe.ui.form.on('Delivery Note', {\n\trefresh(frm) {\n\t\t// Make certain fields read-only for all users except System Manager\n        var hasSystemManager = frappe.user.has_role('System Manager');\n        if (!hasSystemManager) {\n            cur_frm.set_df_property(\"terms\", \"read_only\", 1);\n        }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2024-04-16 12:03:36.505537",
  "module": "suntek",
  "name": "Item",
  "script": "frappe.ui.form.on('Item', {\n\trefresh(frm) {\n\tif(cur_frm.is_new()){\n\t    cur_frm.set_value(\"item_code\",undefined)\n\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee Advance",
  "enabled": 1,
  "modified": "2024-10-09 11:17:21.746670",
  "module": null,
  "name": "Employee Advance",
  "script": "// Employee Advance: Fetch Employee Number based on Logged-In User\nfrappe.ui.form.on('Employee Advance', {\n    refresh(frm) {\n        // Ensure the form is in create mode\n        if (frm.is_new()) {\n            // Fetch the employee number based on the current user ID\n            frappe.db.get_value(\"Employee\", {\"user_id\": frappe.session.user}, [\"employee_number\"])\n                .then(response => {\n                    if (response && response.message) {\n                        var employee_number = response.message.employee_number;\n                        console.log('Fetched employee number:', employee_number); // Debugging log\n\n                        if (employee_number) {\n                            // Set the employee number in the form\n                            frm.set_value('employee', employee_number);\n                        } else {\n                            console.log('Employee number not found for the current user.');\n                        }\n                    } else {\n                        console.log('No response or empty response from the server.');\n                    }\n                })\n                .catch(err => {\n                    console.error('Error fetching employee number:', err); // Log any errors for debugging\n                });\n        }\n    }\n});\n\n// Payment Entry: Fetch Project from Employee Advance\nfrappe.ui.form.on('Payment Entry', {\n    onload: function(frm) {\n        if(frm.doc.reference_doctype == \"Employee Advance\" && frm.doc.reference_name) {\n            // Fetch the Employee Advance document\n            frappe.db.get_doc('Employee Advance', frm.doc.reference_name)\n                .then(employee_advance => {\n                    // Set the 'project' field in Payment Entry from 'custom_project' in Employee Advance\n                    frm.set_value('project', employee_advance.custom_project);\n                });\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Expense Claim",
  "enabled": 1,
  "modified": "2024-07-12 14:57:54.842506",
  "module": null,
  "name": "Auto Calculation Amount Based on kms",
  "script": "// frappe.ui.form.on('Expense Claim', {\n// \trefresh(frm) {\n// \t\t// your code here\n// \t}\n// })\nfunction calculate_amount(frm, cdt, cdn){\n    let row = frappe.get_doc(cdt, cdn);\n    if(row.custom_vehicle_type && row.custom_km_travelled){\n    \tif(row.custom_vehicle_type == \"Car\"){\n    \t\trow.amount = row.custom_car_claimable_amount_per_km * row.custom_km_travelled\n    \t}\n    \tif(row.custom_vehicle_type == \"Bike\"){\n    \t    row.amount = row.custom_bike_claimable_amount_per_km * row.custom_km_travelled\n    \t}\n    \tconsole.log(row.amount, \"Amount\")\n    \tfrm.refresh_field(\"expenses\")\n    }\n}\n\nfrappe.ui.form.on('Expense Claim Detail', {\n\tcustom_km_travelled(frm, cdt, cdn) {\n        calculate_amount(frm, cdt, cdn)\n    },\n    custom_vehicle_type(frm, cdt, cdn) {\n        calculate_amount(frm, cdt, cdn)\n    },\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2024-08-29 19:02:23.786032",
  "module": null,
  "name": "Purchase order",
  "script": "frappe.ui.form.on('Purchase Order', {\n\trefresh(frm) {\nsetTimeout(function() {\n    $(\"button[data-label='Update%20Items']\").css(\"display\", \"none\");\n}, 0); \n\t},\n\t\tonload(frm) {\nsetTimeout(function() {\n    $(\"button[data-label='Update%20Items']\").css(\"display\", \"none\");\n}, 0); \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Subsidy",
  "enabled": 1,
  "modified": "2024-10-01 15:30:39.227466",
  "module": null,
  "name": "subsidy",
  "script": "frappe.ui.form.on('Subsidy', {\n    refresh: function(frm) {\n        set_css(frm);\n    }\n});\n\nfunction set_css(frm) {\n    let element = document.querySelectorAll(\"[data-fieldname='custom_sales_order_status']\")[1];\n    \n    // Ensure the element exists before applying the style\n    if (element) {\n        element.style.color = 'green';\n        // element.style.fontWeight = 'bold';  // Uncomment if you want to make it bold\n    }\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Installation Note",
  "enabled": 1,
  "modified": "2024-10-07 10:35:07.019285",
  "module": null,
  "name": "Installation Note",
  "script": "frappe.ui.form.on('Installation Note', {\n    refresh: function(frm) {\n        if (frm.doc.status === 'Draft') {\n            frm.add_custom_button(__('Go to Quality Inspection'), function() {\n                goToQualityInspection(frm);\n            });\n        }\n    }\n});\n\nfunction goToQualityInspection(frm) {\n    var project_reference = frm.doc.custom_project;\n    if (project_reference) {\n        frappe.new_doc('Quality Inspection', {\n            reference_type: 'Project',\n            reference_name: project_reference\n        });\n    } else {\n        frappe.msgprint(__('Please set a project reference first.'));\n    }\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2024-11-02 17:53:30.751053",
  "module": null,
  "name": "Sales Order",
  "script": "frappe.ui.form.on('Sales Order', {\n    payment_terms_template: function(frm) {\n        if (frm.doc.payment_terms_template) {\n            frappe.call({\n                method: \"frappe.client.get\",\n                args: {\n                    doctype: \"Payment Terms Template\",\n                    name: frm.doc.payment_terms_template\n                },\n                callback: function(r) {\n                    if (r.message) {\n                        frm.clear_table(\"payment_schedule\");\n                        $.each(r.message.terms, function(index, row) {\n                            let child = frm.add_child(\"payment_schedule\");\n                            frappe.model.set_value(child.doctype, child.name, \"payment_term\", row.payment_term);\n                            frappe.model.set_value(child.doctype, child.name, \"due_date\", row.due_date);\n                            frappe.model.set_value(child.doctype, child.name, \"invoice_portion\", row.invoice_portion);\n                        });\n                        frm.refresh_field(\"payment_schedule\");\n                    }\n                }\n            });\n        } else {\n            frm.clear_table(\"payment_schedule\");\n            frm.refresh_field(\"payment_schedule\");\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 0,
  "modified": "2025-01-07 15:39:21.960586",
  "module": null,
  "name": "Opportunity Validation",
  "script": "frappe.ui.form.on('Opportunity', {\n    before_save: function(frm) {\n        // Get the logged-in user\n        let logged_in_user = frappe.session.user;\n        \n        if (logged_in_user == \"salesteam3@suntek.co.in\" || logged_in_user == \"aditya.s@navtech.io\") {\n            return;\n        }\n        \n        // Check if the opportunity_owner is not the same as the logged-in user\n        if (frm.doc.opportunity_owner !== logged_in_user) {\n            frappe.msgprint(__('You are not authorized to save this Opportunity document because you are not the opportunity owner.'));\n            frappe.validated = false;  // Prevent saving the document\n        }\n    }\n});",
  "view": "Form"
 }
]